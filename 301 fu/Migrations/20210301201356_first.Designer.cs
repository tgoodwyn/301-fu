// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _301_fu.Data;

namespace _301_fu.Migrations
{
    [DbContext(typeof(_301_fuContext))]
    [Migration("20210301201356_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_301_fu.Models.Element", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("labelIdx")
                        .HasColumnType("int");

                    b.Property<int>("shrineId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("shrineId")
                        .IsUnique();

                    b.ToTable("Element");
                });

            modelBuilder.Entity("_301_fu.Models.Medallion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("labelIdx")
                        .HasColumnType("int");

                    b.Property<int>("shrineId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("shrineId");

                    b.ToTable("Medallion");
                });

            modelBuilder.Entity("_301_fu.Models.Region", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("labelIdx")
                        .HasColumnType("int");

                    b.Property<int>("shrineId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("shrineId")
                        .IsUnique();

                    b.ToTable("Region");
                });

            modelBuilder.Entity("_301_fu.Models.Shrine", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Shrine");
                });

            modelBuilder.Entity("_301_fu.Models.Element", b =>
                {
                    b.HasOne("_301_fu.Models.Shrine", null)
                        .WithOne("element")
                        .HasForeignKey("_301_fu.Models.Element", "shrineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_301_fu.Models.Medallion", b =>
                {
                    b.HasOne("_301_fu.Models.Shrine", null)
                        .WithMany("medallions")
                        .HasForeignKey("shrineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_301_fu.Models.Region", b =>
                {
                    b.HasOne("_301_fu.Models.Shrine", null)
                        .WithOne("region")
                        .HasForeignKey("_301_fu.Models.Region", "shrineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_301_fu.Models.Shrine", b =>
                {
                    b.Navigation("element");

                    b.Navigation("medallions");

                    b.Navigation("region");
                });
#pragma warning restore 612, 618
        }
    }
}
